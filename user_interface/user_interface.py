from pathlib import Path
import sys

import easygui
import yaml

class UserGui:
    """
    Main user GUI
    """
    def __init__(self):
        self.config = {}
        self.config_save_dir = None

    def show_homepage(self):
        """
        Initial screen users see when starting the program
        """
        easygui.msgbox("Welcome to the Rogaining Planning Tool\nSource: https://github.com/chrisharris000/rogaine-planner")

    def show_config_prompt(self) -> str:
        """
        Prompt user to either create a new config or load an existing config
        Returns either "Create Config" or "Load Config"
        """
        msg = "Create config (first time user) or Load Config\nPress <cancel> to exit."
        title = "Config selection"
        choices = ["Create Config", "Load Config"]
        choice = easygui.choicebox(msg, title, choices)
        if choice is None:  # user selected <cancel>, exiting program
            sys.exit(0)

        return choice
    
    def show_load_config_option(self):
        """
        Menu for when user elects to load existing config
        Loads the selected config and returns it as a dictionary
        """
        msg = "Select the config for results planner"
        title = "Config selection"
        filetypes = ["*.yml", "*.yaml"]
        config_path = easygui.fileopenbox(msg, title, filetypes=filetypes)
        with open(config_path, "r") as config_fp:
            self.config = yaml.safe_load(config_fp)
    
    def show_create_config_option(self):
        """
        Menu for when user elects to create a new config
        Prompt user to enter:
        - path to map
        - path to location to save control coordinates
        - path to save config file
        """
        self._get_map_path()

        self._get_control_coords_save_dir()

        self._get_config_save_location()
    
    def _get_map_path(self):
        """
        Get path to map
        """
        msg = "Select the map"
        title = "Map selection"
        filetypes = ["*.png"]
        map_file = easygui.fileopenbox(msg, title, filetypes=filetypes)
        self.config["map_file"] = map_file

    def _get_control_coords_save_dir(self):
        """
        Get path to directory to save control coordinates
        """
        msg = "Select the directory to save the control coordinates to"
        title = "Control coordinates save directory selection"
        control_coords_dir = easygui.diropenbox(msg, title)
        self.config["control_coordinates"] = f"{control_coords_dir}/control-coordinates.csv"

        # prompt user to select coordinates with gui
        # self._load_control_coordinates_identification()
    
    def _get_config_save_location(self):
        """
        Get path to save location of config
        """
        msg = "Select the directory to save the config to"
        title = "Config save directory selection"
        config_save_dir = easygui.diropenbox(msg, title)
        self.config_save_dir = config_save_dir

    def _load_control_coordinates_identification(self):
        """
        Prompt user to identify control coordinates
        """
        coord_rdr = map_reader.ControlCoordinatesReader(self.config)
        coord_rdr.open_map()
        coord_rdr.write_coordinates()

    def save_config(self):
        """
        Save a config generated by the user through the Create Config option
        """
        config_save_file = f"{self.config_save_dir}/config.yml"
        with open(config_save_file, "w") as config_fp:
            yaml.dump(self.config, config_fp)